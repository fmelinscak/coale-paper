# Information about a set of simulations
sim_set : 
  name : "Kru2008 design evaluation and optimization"
  authors : "Filip Melinscak"
  description : "A set of simulations which evaluate the backward blocking design of Kruschke (2008, doi: 10.3758/LB.36.3.210) and try to optimize it."
  date_created : "2018-08-09"
  results_path : "../results/kru2008"
  
# Information about a specific simulation
sim_run : 
  name : "kru2008_eval_design-vagueopt_prior-vague"
  description : "Evaluation of model selection accuracy of the two stage design optimized under a vague prior, with model space of Kruschke (2008, doi: 10.3758/LB.36.3.210), under a vague evaluative sampling prior."
  date_created : "2018-08-09"
  rng_seed : 982018006 # Random number generator seed for the simulation
  n_exp : 256 # Number of simulated experiments
  n_sub : 1 # Number of simulated subjects per experiment
  verbose : false # Whether to print diagnostic messages
  parallel : true # Whether to fit models to experiments in parallel

# Information about the experimental design being evaluated
exp_design :
  exp_design_func : "exp_twostage_twocuecmpnd" # Name of the Matlab function used to generate experiment stimuli from design variables
  desvars : # Design variables structure (input to exp_design_func)
    nTrialsAll : 
        - [61, 61] # Trials per each stage
    probA_1 : 0.0087378
    probB_1 : 0.63019
    probUS_A_1 : 0.57455
    probUS_B_1 : 0.99449
    probUS_AB_1 : 0.053091
    probA_2 : 0.76009
    probB_2 : 0.019426
    probUS_A_2 : 0.86485
    probUS_B_2 : 0.57181
    probUS_AB_2 : 0.69376

# Information about the design criterion that is evaluated
design_criterion : 
  criterion_func : "loss_modsel_err" # Name of the Matlab function used to evaluate the criterion
  criterion_options :
    criterion : 'bic' # Name of the model selection criterion.
    do_logodds : true # Whether to transform the error rate from the probability to log-odds scale.

# Information about the model space (here the same space is used for simulation and fitting)
model_space : 
  # RW model with affine observation function which maps associative weights to the output
  - name : 'RW(V)'
    type : 'nssm' # Model type can be ['nssm' | 'generic']
    evo_func : 'evo_rw_batch' # Name of the NSSM evolution function
    obs_func : 'obs_affine_batch' # Name of the NSSM observation function
    prior_sim : # Sampling prior (either constant values or functions that generate random replicates from the prior)
      evo : 
        wInit : 0 # Value taken from Kruschke (2008)
        alpha : '@() unifrnd(0,1)' # Vague prior
      obs :
        intercept : 0
        slope : 1
        sd : '@() unifrnd(0.05,0.5)' # Vague prior
    prior_fit : # Fitting prior and optimization boundaries and initialization
      - name : 'wInit'
        type : 'evo'
        logpdf : '@(x) 0'
        init : []
        lb : -10
        ub : 10
      - name : 'alpha'
        type : 'evo'
        logpdf : '@(x) 0'
        init: []
        lb : 0
        ub : 1
      - name : 'intercept'
        type : 'obs'
        logpdf : '@(x) 0'
        init: []
        lb : -10
        ub : 10
      - name : 'slope'
        type : 'obs'
        logpdf : '@(x) 0'
        init: []
        lb : -10
        ub : 10
      - name : 'sd'
        type : 'obs'
        logpdf : '@(x) 0'
        init: []
        lb : 0.001
        ub : 10
  # Kalman RW model with affine observation function which maps associative weights to the output
  - name : 'Kalman RW(V)'
    type : 'nssm' # Model type can be ['nssm' | 'generic']
    evo_func : 'evo_krw_batch' # Name of the NSSM evolution function
    obs_func : 'obs_affine_batch' # Name of the NSSM observation function
    prior_sim : # Sampling prior (either constant values or functions that generate random replicates from the prior)
      evo : 
        wInit : 0 # Value taken from Kruschke (2008)
        logSigmaWInit : '@() normrnd(0, 2)' # Mean value taken from Kruschke (2008), SD supposed to result in vagueness
        logTauSq : -20 # Approx. 0 when exponentiated; value taken from Kruschke (2008)
        logSigmaRSq : '@() normrnd(0, 2)' # Original value 1.3863 taken from Kruschke (2008); Here the prior should be vague
      obs :
        intercept : 0
        slope : 1
        sd : '@() unifrnd(0.05,0.5)' # Vague prior
    prior_fit : # Fitting prior and optimization boundaries and initialization
      - name : 'wInit'
        type : 'evo'
        logpdf : '@(x) 0'
        init: []
        lb : -10
        ub : 10
      - name : 'logSigmaWInit'
        type : 'evo'
        logpdf : '@(x) 0'
        init: []
        lb : -30
        ub : 30
      - name : 'logTauSq'
        type : 'evo'
        logpdf : '@(x) 0'
        init: []
        lb : -30
        ub : 30
      - name : 'logSigmaRSq'
        type : 'evo'
        logpdf : '@(x) 0'
        init: []
        lb : -30
        ub : 30
      - name : 'intercept'
        type : 'obs'
        logpdf : '@(x) 0'
        init: []
        lb : -10
        ub : 10
      - name : 'slope'
        type : 'obs'
        logpdf : '@(x) 0'
        init: []
        lb : -10
        ub : 10
      - name : 'sd'
        type : 'obs'
        logpdf : '@(x) 0'
        init: []
        lb : 0.001
        ub : 10
